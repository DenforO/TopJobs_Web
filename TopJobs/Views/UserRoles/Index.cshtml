@using X.PagedList.Mvc.Common;
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model IPagedList<TopJobs.Models.UserRolesViewModel>
@{
    ViewData["Title"] = "Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<h1>Users</h1>
@using (Html.BeginForm("Index", "UserRoles", FormMethod.Get))
{
    <p style="margin:30px 0 30px 0;">
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table table-striped">
    <thead class="table-primary">
        <tr>
            <th>Full Name</th>
            <th>Username</th>
            <th>Email</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.FullName</td>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>
                    <a class="btn btn-primary" asp-controller="UserRoles" asp-action="Manage" asp-route-userId="@user.UserId">Roles</a>
                    <a class="btn btn-primary" asp-controller="JobExperienceEntries" asp-action="Index" asp-route-userId="@user.UserId">Experience</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<nav>
    @Html.PagedListPager(Model, page => Url.Action("index", new { page = page, currentFilter = ViewBag.CurrentFilter }), new PagedListRenderOptions()
    {
        ActiveLiElementClass = "active",
        PageClasses = new[] { "page-link" },
        LiElementClasses = new[] { "page-item" },
        UlElementClasses = new[] { "pagination", "justify-content-center", "mt-3" },
        LinkToNextPageFormat = "Next",
        LinkToPreviousPageFormat = "Previous",
        MaximumPageNumbersToDisplay = 5,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always
    })
</nav>